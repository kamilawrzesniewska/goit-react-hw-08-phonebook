{"version":3,"file":"static/js/273.b6704f45.chunk.js","mappings":"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","sources":["components/ContactForm.jsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/FilteredUsers.jsx","components/ContactList.jsx","components/Notification.jsx","utilities/isEmpty.js","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { useAddContactMutation } from 'services/phonebookApi';\n\nconst Inputbox = styled.div`\n  position: relative;\n  max-width: 100%;\n  height: 50px;\n  margin-bottom: 50px;\n  &:last-child {\n  margin-bottom: 0;\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  border: 2px solid #000;\n  outline: none;\n  background: none;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 1.2em;\n  box-sizing: border-box;\n  &:focus ~ span {\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n  &:not(:placeholder-shown) ~ span {\n    color: red;\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n  &:valid ~ span {\n    color: #86af49;\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n`;\n\nconst Span = styled.span`\n  position: absolute;\n  top: 14px;\n  left: 20px;\n  font-size: 1em;\n  transition: 0.6s;\n  font-family: sans-serif;\n`;\n\nconst Btn = styled.button`\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border: 2px solid #000;\n  outline: none;\n  background: none;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 1.2em;\n  width: 50%;\n  background: grey;\n  color: #fff;\n  border: #fff;\n  &:hover {\n    background: linear-gradient(85deg, blue);\n  }\n`;\n\nconst ContactForm = ({ contacts }) => {\n  const [addContact] = useAddContactMutation();\n\n  const handleSubmit = evt => {\n    const form = evt.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    evt.preventDefault();\n\n    for (const contact of contacts) {\n      if (contact.name === name)\n        return alert(\n          `${name} is already in your contacts with the phone number ${contact.number}`\n        );\n\n      if (contact.number === number)\n        return alert(\n          `${number} is already in your contacts with the name ${contact.name}`\n        );\n    }\n    addContact({ name, number });\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Inputbox>\n        <label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\" \"\n          />\n          <Span>Name</Span>\n        </label>\n      </Inputbox>\n      <Inputbox>\n        <label>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\" \"\n          />\n          <Span>Number</Span>\n        </label>\n      </Inputbox>\n      <Inputbox>\n        <Btn type=\"submit\">Add contact</Btn>\n      </Inputbox>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from './redux/Actions';\n\nconst Filterbox = styled.div`\n  position: relative;\n  max-width: 100%;\n  height: 50px;\n  margin-bottom: 50px;\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  border: 2px solid #000;\n  outline: none;\n  background: none;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 1.2em;\n  box-sizing: border-box;\n  &:focus ~ span {\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n  &:not(:placeholder-shown) ~ span {\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n`;\n\nconst Span = styled.span`\n  position: absolute;\n  top: 14px;\n  left: 20px;\n  font-size: 1em;\n  transition: 0.6s;\n  font-family: sans-serif;\n`;\n\nconst FilteredUsers = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const onFilter = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n  return (\n    <Filterbox>\n      <label>\n        <Input\n          onChange={onFilter}\n          type=\"text\"\n          value={filter}\n          name=\"filter\"\n          placeholder=\" \"\n        />\n        <Span>Find contacts by name</Span>\n      </label>\n    </Filterbox>\n  );\n};\n\nexport default FilteredUsers;\n","import styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { useMemo } from 'react';\nimport { useDeleteContactMutation } from 'services/phonebookApi';\n\nconst List = styled.li`\n  display: flex;\n  &::before {\n    color: red;\n    font-weight: bold;\n    display: inline-block;\n    width: 1em;\n  }\n`;\n\nconst Btn = styled.button`\n  cursor: pointer;\n  border: 2px solid #fff;\n  outline: none;\n  padding: 6px;\n  border-radius: 10px;\n  font-size: 1em;\n  width: 30%;\n  background: grey;\n  color: #fff;\n`;\n\nconst ElementWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst ContactList = ({ contacts }) => {\n  const filter = useSelector(state => state.filter);\n  const normalizedFilter = filter.toLowerCase().trim();\n\n  const filteredContacts = useMemo(\n    () =>\n      contacts\n        .filter(contact =>\n          contact.name.toLowerCase().includes(normalizedFilter)\n        )\n        .sort((a, b) => a.name.localeCompare(b.name)),\n    [normalizedFilter, contacts]\n  );\n\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ElementWrapper key={'el' + id}>\n          <List key={id}>\n            <a href={`tel:${number}`}>\n              {name} <br />\n              {number}\n            </a>\n          </List>\n          <Btn key={'btn' + id} onClick={() => deleteContact(id)}>\n            Delete\n          </Btn>\n        </ElementWrapper>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nconst Message = styled.p`\n  font-size: 1em;\n  font-family: sans-serif;\n`;\n\nconst Notification = () => {\n  return (\n    <>\n      <Message>There is no contacts to show</Message>\n    </>\n  );\n};\n\nexport default Notification;\n","const isEmpty = arr => arr.length === 0;\n\nexport default isEmpty;\n","import ContactForm from '../components/ContactForm';\nimport FilteredUsers from '../components/FilteredUsers';\nimport ContactList from '../components/ContactList';\nimport styled from 'styled-components';\nimport { useGetContactsQuery } from 'services/phonebookApi';\nimport Notification from '../components/Notification';\nimport isEmpty from 'utilities/isEmpty';\nimport Loader from '../components/Loader';\n\nconst Center = styled.div`\n  max-width: 400px;\n`;\n\nconst MainHeader = styled.h1`\n  font-size: 2em;\n`;\n\nconst SecondHeader = styled.h2`\n  font-size: 1.5em;\n \n  padding: 10px;\n  color: #000;\n  letter-spacing: 5px;\n  margin-bottom: 60px;\n  font-weight: bold;\n  padding-left: 10px;\n`;\nconst SpinnerWrapper = styled.div`\n  margin: 10px 0 0 100px;\n`;\n\nconst Contacts = () => {\n  const {\n    data: contacts,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n  } = useGetContactsQuery();\n\n  let content;\n\n  if (isLoading) {\n    content = (\n      <SpinnerWrapper>\n        <Loader />\n      </SpinnerWrapper>\n    );\n  } else if (isSuccess && !isEmpty(contacts)) {\n    content = <ContactList contacts={contacts} />;\n  } else if (isSuccess && isEmpty(contacts)) {\n    content = <Notification />;\n  } else if (isError) {\n    content = <div>{error.toString()}</div>;\n  }\n\n  return (\n    <>\n      <Center>\n        <MainHeader>Phonebook</MainHeader>\n        <ContactForm contacts={contacts} />\n        <SecondHeader>Contacts</SecondHeader>\n        <FilteredUsers />\n        {content}\n      </Center>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Inputbox","styled","Input","Span","Btn","contacts","useAddContactMutation","addContact","onSubmit","evt","form","target","name","value","number","preventDefault","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","contact","alert","reset","type","pattern","title","required","placeholder","Filterbox","filter","useSelector","state","dispatch","useDispatch","onChange","filterContacts","List","ElementWrapper","normalizedFilter","toLowerCase","trim","filteredContacts","useMemo","includes","sort","a","b","localeCompare","useDeleteContactMutation","deleteContact","map","id","href","onClick","Message","arr","Center","MainHeader","SecondHeader","SpinnerWrapper","content","useGetContactsQuery","data","isLoading","isSuccess","isError","error","Loader","isEmpty","toString"],"sourceRoot":""}